(function() {
  var setRates;

  math.config({
    number: 'bignumber'
  });

  math.type.Unit.BASE_UNITS.MONEY = {};

  setRates = function(rates) {
    var $currency, currency, _results;
    _results = [];
    for (currency in rates) {
      if ($currency = document.getElementById(currency.toLowerCase())) {
        $currency.value = rates[currency];
      }
      _results.push(math.type.Unit.UNITS[currency] = {
        name: currency,
        base: math.type.Unit.BASE_UNITS.MONEY,
        prefixes: math.type.Unit.PREFIXES.NONE,
        value: 1 / rates[currency],
        offset: 0
      });
    }
    return _results;
  };

  if (window.rates) {
    setRates(window.rates);
  }


  /*
  request = new XMLHttpRequest({ mozSystem: true })
  request.open 'get', '/rates.json', true
  request.responseType = 'json'
  request.addEventListener 'error', ->
    console.log "Error XHR rates.json"
  request.addEventListener 'load', (data) ->
    window.rates = data.srcElement.response.rates
    localStorage.setItem("rates", JSON.stringify(window.rates))
    setRates(window.rates)
  request.send()
   */

  math.sin.transform = function(a) {
    if (a % math.pi === 0) {
      return 0;
    } else {
      return math.sin(a);
    }
  };

  math.factorial.transform = function(a) {
    if (a > 100000) {
      throw new math.error.ArgumentsError();
    } else {
      return math.factorial(a);
    }
  };

  math.divide.transform = function(a, b) {
    if (b.toNumber() === 0) {
      throw new math.error.ArgumentsError();
    } else {
      return math.divide(a, b);
    }
  };

}).call(this);
